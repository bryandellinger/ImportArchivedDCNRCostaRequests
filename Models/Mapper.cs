using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ImportArchivedDCNRCostaRequests.Models
{
    public class Mapper : IMapper
    {
        public List<COSTAForm> MapOstForm(List<OstForm> ostForms)
        {
            return (from f in ostForms
                    select new COSTAForm
                    {
                       WorkflowId = f.WorkflowId,
                       IsTraining = f.IsTraining,
                       IsOSTforOthersInd = f.IsOSTforOthersInd,
                       PreparerUserId = f.PreparerUserId,
                       PreparerName = f.PreparerName,
                       PreparerPosition = f.PreparerPosition,
                       PreparerPhone = f.PreparerPhone,
                       PreparerEmail = f.PreparerEmail,
                       EmployeeUserId = f.EmployeeUserId,
                       EmployeeFirstName = f.EmployeeFirstName,
                       EmployeeMiddleName = f.EmployeeMiddleName,
                       EmployeeLastName = f.EmployeeLastName,
                       EmployeeNumber = f.EmployeeNumber,
                       EmployeeEmail = f.EmployeeEmail,
                       EmployeeBureau = f.EmployeeBureau,
                       EmployeeWorkAddress = f.EmployeeWorkAddress,
                       EmployeeWorkPhone = f.EmployeeWorkPhone,
                       EmployeePosition = f.EmployeePosition,
                       EmployeeAgency = f.EmployeeAgency,
                       EmployeeSupervisorUserId = f.EmployeeSupervisorUserId,
                       EmployeeSupervisorManuallySelectedInd = f.EmployeeSupervisorManuallySelectedInd,
                       EmployeeManagerUserId = f.EmployeeManagerUserId,
                       EmployeeManagerManuallySelectedInd = f.EmployeeManagerManuallySelectedInd,
                       CourseTitle = f.CourseTitle,
                       CourseDescription = f.CourseDescription,
                       CourseObjectives = f.CourseObjectives,
                       StartDate = f.StartDate,
                       EndDate = f.EndDate,
                       RegistrationDeadline = f.RegistrationDeadline,
                       OSTHours = f.OSTHours,
                       IsDevelopmentOpportunityInd = f.IsDevelopmentOpportunityInd,
                       IsRequiredForPositionInd = f.IsRequiredForPositionInd,
                       RequiredForPositionDescription = f.RequiredForPositionDescription,
                       IsAcademicInd = f.IsAcademicInd,
                       IsComputerTrainingInd = f.IsComputerTrainingInd,
                       IsProfessionalLicensureInd = f.IsProfessionalLicensureInd,
                       IsLicensureTestingInd = f.IsLicensureTestingInd,
                       TotalAcademicCredits = f.TotalAcademicCredits,
                       OSTEventTypeId = f.OSTEventTypeId,
                       OtherEventDescription = f.OtherEventDescription,
                       IsDiscountAvailableInd = f.IsDiscountAvailableInd,
                       OSTDiscountTypeId = f.OSTDiscountTypeId,
                       DiscountAssociationName = f.DiscountAssociationName,
                       DiscountOtherDescription = f.DiscountOtherDescription,
                       DiscountDeadline = f.DiscountDeadline,
                       DiscountAmount = f.DiscountAmount,
                       TrainingSourceName = f.TrainingSourceName,
                       TrainingCity = f.TrainingCity,
                       TrainingZip = f.TrainingZip,
                       TrainingStateId = f.TrainingStateId,
                       DepartingCity = f.DepartingCity,
                       DepartingStateId = f.DepartingStateId,
                       TrainingWebsite = f.TrainingWebsite,
                       IsTrainingMissionCritical = f.IsTrainingMissionCritical,
                       MissionCriticalDescription = f.MissionCriticalDescription,
                       TrainingPurposeDescription = f.TrainingPurposeDescription,
                       IsTravelRequired = f.IsTravelRequired,
                       TravelStartDate = f.TravelStartDate,
                       TravelEndDate = f.TravelEndDate,
                       TravelPurposeDescription = f.TravelPurposeDescription,
                       TravelRequirementsDescription = f.TravelRequirementsDescription,
                       EventBenefitsDescription = f.EventBenefitsDescription,
                       OtherPurposeDescription = f.OtherPurposeDescription,
                       OSTTransportationModeTypeId = f.OSTTransportationModeTypeId,
                       EstimateMileage = f.EstimateMileage,
                       IsInDrivingDistance = f.IsInDrivingDistance,
                       DrivingDistanceDescription = f.DrivingDistanceDescription,
                       IsReimbursement = f.IsReimbursement,
                       IsCarPool = f.IsCarPool,
                       IsPersonalCarReimbursement = f.IsPersonalCarReimbursement,
                       IsDriver = f.IsDriver,
                       IsGiftBanFitInd = f.IsGiftBanFitInd,
                       CarPoolGroup = f.CarPoolGroup,
                       OtherTransportationModeDescription = f.OtherTransportationModeDescription,
                       TrainingFeeAmount = f.TrainingFeeAmount,
                       LodgingAmount = f.LodgingAmount,
                       IsLodgingCostEfficient = f.IsLodgingCostEfficient,
                       LodgingCostDescription = f.LodgingCostDescription,
                       SubsistenceAmount = f.SubsistenceAmount,
                       IsMealReimbursement = f.IsMealReimbursement,
                       TransportationAmount = f.TransportationAmount,
                       OtherCostsAmount = f.OtherCostsAmount,
                       OtherCostsDescription = f.OtherCostsDescription,
                       RegistrationAmount = f.RegistrationAmount,
                       OtherFundsAmount = f.OtherFundsAmount,
                       IsCommonwealthFundsInd = f.IsCommonwealthFundsInd,
                       CommonwealthFundName = f.CommonwealthFundName,
                       IsFederalFundsInd = f.IsFederalFundsInd,
                       IsProfessionalAssociationFundsInd = f.IsProfessionalAssociationFundsInd,
                       IsThirdPartyVendorFundsInd = f.IsThirdPartyVendorFundsInd,
                       IsOtherFundsInd = f.IsOtherFundsInd,
                       OtherFundingDescription = f.OtherFundingDescription,
                       IsAssociationCoverTravel = f.IsAssociationCoverTravel,
                       AssociationDuesDescription = f.AssociationDuesDescription,
                       CommonwealthVendorsDescription = f.CommonwealthVendorsDescription,
                       TravelFundsAllocationDescription = f.TravelFundsAllocationDescription,
                       TotalTrainingCostsAmount = f.TotalTrainingCostsAmount,
                       TotalDCNRFundsAmount = f.TotalDCNRFundsAmount,
                       TotalFedFundsAmount = f.TotalFedFundsAmount,
                       FedGrantName = f.FedGrantName,
                       IsFedFundsForOtherUseInd = f.IsFedFundsForOtherUseInd,
                       TotalThirdPartyFundsAmount = f.TotalThirdPartyFundsAmount,
                       ThirdPartyName = f.ThirdPartyName,
                       ThirdPartyFundsSource = f.ThirdPartyFundsSource,
                       IsThirdPartyOversee = f.IsThirdPartyOversee,
                       TotalProfessionalFundsAmount = f.TotalProfessionalFundsAmount,
                       ProfessionalFundsName = f.ProfessionalFundsName,
                       TotalPaidAmount = f.TotalPaidAmount,
                       MeetingEventInitiatedBy = f.MeetingEventInitiatedBy,
                       MeetingEventInitiatorDescription = f.MeetingEventInitiatorDescription,
                       MetricsForSuccessDescription = f.MetricsForSuccessDescription,
                       SpecialIssuesOrConcernsDescription = f.SpecialIssuesOrConcernsDescription,
                       DateAuthorizationNeeded = f.DateAuthorizationNeeded,
                       AuthorizationNo = f.AuthorizationNo,
                       IsOutOfStateInd = f.IsOutOfStateInd,
                       IsOutOfCountryInd = f.IsOutOfCountryInd,
                       IsLockedForSubmitterInd = f.IsLockedForSubmitterInd,
                       GeneralComment = f.GeneralComment,
                       CancelComment = f.CancelComment,
                       InternationalAddress = f.InternationalAddress,
                       ImportName = f.ImportName,
                       ApprovalRequestedByDate = f.ApprovalRequestedByDate,
                       DepartmentTypeId = 1                     
                   }).ToList();
        }
    }
}
